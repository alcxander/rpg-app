export type Json = string | number | boolean | null | { [key: string]: Json | undefined } | Json[]

export type Database = {
  // Allows to automatically instanciate createClient with right options
  // instead of createClient<Database, { PostgrestVersion: 'XX' }>(URL, KEY)
  __InternalSupabase: {
    PostgrestVersion: "13.0.4"
  }
  public: {
    Tables: {
      battles: {
        Row: {
          allies: Json | null
          background_image: string | null
          campaign_id: string | null
          created_at: string
          id: string
          log: string[] | null
          monsters: Json | null
          name: string | null
          session_id: string | null
          updated_at: string | null
        }
        Insert: {
          allies?: Json | null
          background_image?: string | null
          campaign_id?: string | null
          created_at?: string
          id?: string
          log?: string[] | null
          monsters?: Json | null
          name?: string | null
          session_id?: string | null
          updated_at?: string | null
        }
        Update: {
          allies?: Json | null
          background_image?: string | null
          campaign_id?: string | null
          created_at?: string
          id?: string
          log?: string[] | null
          monsters?: Json | null
          name?: string | null
          session_id?: string | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "battles_campaign_id_fkey"
            columns: ["campaign_id"]
            isOneToOne: false
            referencedRelation: "campaigns"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "battles_session_id_fkey"
            columns: ["session_id"]
            isOneToOne: false
            referencedRelation: "sessions"
            referencedColumns: ["id"]
          },
        ]
      }
      campaigns: {
        Row: {
          access_enabled: boolean | null
          created_at: string
          id: string
          name: string
          owner_id: string
        }
        Insert: {
          access_enabled?: boolean | null
          created_at?: string
          id?: string
          name: string
          owner_id: string
        }
        Update: {
          access_enabled?: boolean | null
          created_at?: string
          id?: string
          name?: string
          owner_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "campaigns_owner_id_fkey"
            columns: ["owner_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      sessions: {
        Row: {
          campaign_id: string
          created_at: string
          id: string
          participants: Json | null
        }
        Insert: {
          campaign_id: string
          created_at?: string
          id: string
          participants?: Json | null
        }
        Update: {
          campaign_id?: string
          created_at?: string
          id?: string
          participants?: Json | null
        }
        Relationships: [
          {
            foreignKeyName: "sessions_campaign_id_fkey"
            columns: ["campaign_id"]
            isOneToOne: false
            referencedRelation: "campaigns"
            referencedColumns: ["id"]
          },
        ]
      }
      shopkeeper_inventory: {
        Row: {
          base_price: number
          created_at: string
          final_price: number
          id: string
          item_name: string
          price_adjustment_percent: number
          rarity: string
          shopkeeper_id: string
          stock_quantity: number
          quantity: number
        }
        Insert: {
          base_price: number
          created_at?: string
          final_price: number
          id?: string
          item_name: string
          price_adjustment_percent: number
          rarity: string
          shopkeeper_id: string
          stock_quantity: number
          quantity?: number
        }
        Update: {
          base_price?: number
          created_at?: string
          final_price?: number
          id?: string
          item_name?: string
          price_adjustment_percent?: number
          rarity?: string
          shopkeeper_id?: string
          stock_quantity?: number
          quantity?: number
        }
        Relationships: [
          {
            foreignKeyName: "shopkeeper_inventory_shopkeeper_id_fkey"
            columns: ["shopkeeper_id"]
            isOneToOne: false
            referencedRelation: "shopkeepers"
            referencedColumns: ["id"]
          },
        ]
      }
      shopkeepers: {
        Row: {
          age: number
          alignment: string
          campaign_id: string
          created_at: string
          description: string
          id: string
          image_url: string | null
          name: string
          quote: string
          race: string
          removed: boolean | null
          removed_at: string | null
          shop_type: string
        }
        Insert: {
          age: number
          alignment: string
          campaign_id: string
          created_at?: string
          description: string
          id?: string
          image_url?: string | null
          name: string
          quote: string
          race: string
          removed?: boolean | null
          removed_at?: string | null
          shop_type: string
        }
        Update: {
          age?: number
          alignment?: string
          campaign_id?: string
          created_at?: string
          description?: string
          id?: string
          image_url?: string | null
          name?: string
          quote?: string
          race?: string
          removed?: boolean | null
          removed_at?: string | null
          shop_type?: string
        }
        Relationships: [
          {
            foreignKeyName: "shopkeepers_campaign_id_fkey"
            columns: ["campaign_id"]
            isOneToOne: false
            referencedRelation: "campaigns"
            referencedColumns: ["id"]
          },
        ]
      }
      users: {
        Row: {
          clerk_id: string
          created_at: string
          email: string | null
          id: string
          name: string | null
        }
        Insert: {
          clerk_id: string
          created_at?: string
          email?: string | null
          id?: string
          name?: string | null
        }
        Update: {
          clerk_id?: string
          created_at?: string
          email?: string | null
          id?: string
          name?: string | null
        }
        Relationships: []
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      [_ in never]: never
    }
    Enums: {
      [_ in never]: never
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}

type DatabaseWithoutInternals = Omit<Database, "__InternalSupabase">
